manifest {
    homePage    = 'https://github.com/TheJacksonLaboratory/splicing-pipelines-nf/'
    description = 'Nextflow Implementation of Anczukow-Lab workflow for alternative splicing processing'
    mainScript  = 'main.nf'
}

params {
    // Input files 
    reads          = false
    bams           = false
    rmats_pairs    = false
    run_name	     = false
    download_from  = false
    key_file       = false
    genome_fasta   = false

    // Main arguments: 
    gtf            = false
    assembly_name  = false
    star_index     = false
    singleEnd      = false
    stranded       = 'first-strand'
    readlength     = false

    // Trimmomatic: 
    minlen         = 20
    slidingwindow  = true
    adapter        = false

    // Star
    overhang       = false
    mismatch       = 2
    filterScore    = 0.66
    sjdbOverhangMin = 3
    star_memory    = false
    soft_clipping = true

    // rMATS
    statoff        = false
    paired_stats   = false
    novelSS        = false
    mil            = 50
    mel            = 500

    // Other
    test           = false
    skiprMATS      = false
    skipMultiQC    = false
    outdir         = 'results'
    multiqc_config = "$baseDir/examples/assets/multiqc_config.yaml" 
    help           = false
    mega_time      = 20.h
    tracedir = "${params.outdir}/pipeline_info"
    cleanup = false  // if true will delete all intermediate files in work folder on workflow completion (not including staged files)

    // Max resources
    max_memory     = 760.GB
    max_cpus       = 72
    max_time       = 72.h
    gc_disk_size   = false //only for google cloud, read docs
    max_retries    = 5
    
    // google life science specific
    debug = false
    gls_boot_disk_size = 50.GB
}

cleanup = params.cleanup

process {
  errorStrategy = 'finish'
  container = 'gcr.io/nextflow-250616/splicing-pipelines-nf:gawk'
  withName: 'get_accession' {
    container = 'lifebitai/download_reads:latest'
  }
  withName: 'gen3_drs_fasp' {
    container = 'quay.io/lifebitai/lifebit-ai-fasp:latest'
  }
  withName: 'get_tcga_bams' {
    container = 'lifebitai/download_reads:latest'
  }
  withName: 'bamtofastq' {
    container = 'lifebitai/download_reads:latest'
  }
  withName: 'rmats' {
    container = 'lifebitai/splicing-rmats:4.1.1'
  }
  withName: 'paired_rmats' {
    container = 'lifebitai/splicing-rmats:4.1.1'
  }
  withName: 'collect_tool_versions_env1' {
    container = 'gcr.io/nextflow-250616/splicing-pipelines-nf:gawk'
  }
  withName: 'collect_tool_versions_env2' {
    container = 'lifebitai/splicing-rmats:4.1.1'
  }
}

profiles {
  standard {
    includeConfig 'conf/executors/google.config'
   }  
  docker { 
    docker.enabled = true 
    docker.runOptions = '-u $(id -u):$(id -g)' // to prevent files in workdir owned by root user
  }
  base { includeConfig 'conf/executors/base.config' }
  sumner { 
    includeConfig 'conf/executors/base.config'
    includeConfig 'conf/executors/sumner.config' 
  }
  singularity {
    includeConfig 'conf/executors/singularity.config'
  }
  MYC_MCF10A_0h_vs_MYC_MCF10A_8h { includeConfig 'conf/examples/MYC_MCF10A_0h_vs_MYC_MCF10A_8h.config' }
  ultra_quick_test { includeConfig 'conf/examples/ultra_quick_test.config' }
}

dag {
  enabled = true
  file = "${params.tracedir}/pipeline_dag.svg"
}
report {
  enabled = true
  file = "${params.tracedir}/execution_report.html"
}
timeline {
  enabled = true
  file = "${params.tracedir}/execution_timeline.html"
}
trace {
  enabled = true
  file = "${params.tracedir}/execution_trace.txt"
  fields = 'process,tag,name,status,exit,script'
}
